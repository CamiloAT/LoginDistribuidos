events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Configuración básica
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Configuración de logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream: $upstream_addr response_time: $upstream_response_time';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Upstream para los servicios de storage
    upstream storage_backend {
        # Estrategia de balanceo: least_conn (menos conexiones activas)
        least_conn;
        
        # Configuración de servidores backend
        server storage1:3000 max_fails=3 fail_timeout=30s weight=1;
        server storage2:3000 max_fails=3 fail_timeout=30s weight=1;
        server storage3:3000 max_fails=3 fail_timeout=30s weight=1;
        server storage4:3000 max_fails=3 fail_timeout=30s weight=1;
        
        # Mantener conexiones vivas
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # Configuración del servidor principal
    server {
        listen 80;
        server_name _;
        
        # Configuración de timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_next_upstream_timeout 10s;
        proxy_next_upstream_tries 3;
        
        # Headers para pasar información del cliente original
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        
        # Configuración para uploads grandes
        client_max_body_size 100M;
        client_body_buffer_size 128k;
        proxy_request_buffering off;
        proxy_buffering off;
        
        # Health check endpoint del load balancer
        location /health {
            access_log off;
            return 200 "nginx-storage-lb healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Status de nginx (para monitoreo)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12; # Redes Docker
            allow 10.0.0.0/8;    # Redes Docker
            deny all;
        }
        
        # Endpoint para obtener información de storage disponible
        location /get-available-storage {
            proxy_pass http://storage_backend;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            
            # Headers específicos
            proxy_set_header Accept application/json;
            
            # Timeout más corto para este endpoint
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
        }
        
        # Endpoint para upload de imágenes
        location /upload {
            proxy_pass http://storage_backend;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            
            # Configuración específica para uploads
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            
            # Timeouts más largos para uploads
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Headers específicos para uploads
            proxy_set_header X-Upload-Size $content_length;
        }
        
        # Endpoint para obtener imágenes por ID
        location ~ ^/image/(.+)$ {
            proxy_pass http://storage_backend;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            
            # Cache para imágenes (opcional)
            proxy_cache_valid 200 302 1h;
            proxy_cache_valid 404 5m;
            proxy_cache_valid any 1m;
            
            # Headers para cache del navegador
            add_header Cache-Control "public, max-age=3600";
            
            # Timeout estándar para obtener imágenes
            proxy_connect_timeout 5s;
            proxy_read_timeout 30s;
        }
        
        # Endpoint para eliminar imágenes (si está implementado)
        location ~ ^/image/(.+)$ {
            # ¡Esta línea fue movida aquí para corregir el error!
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503; 
            limit_except GET {
                proxy_pass http://storage_backend;
            }
        }
        
        # Cualquier otra ruta
        location / {
            proxy_pass http://storage_backend;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            
            # Configuración estándar
            proxy_connect_timeout 5s;
            proxy_read_timeout 30s;
        }
        
        # Manejo de errores personalizados
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            return 503 '{"error": "Storage service temporarily unavailable", "code": 503}';
            add_header Content-Type application/json;
        }
    }
}