services:
  mariadb-master:
    image: mariadb:10.6
    container_name: mariadb-master
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: gallery_db
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - mariadb-master-data:/var/lib/mysql
    ports:
      - "3307:3306" # Puerto directo del master (útil para depuración)
    command: [ "mysqld", "--server-id=1", "--log-bin=master-bin", "--binlog-format=MIXED", "--binlog-do-db=gallery_db", "--max_connections=1000" ]
    networks:
      - gallery-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  mariadb-slave1:
    image: mariadb:10.6
    container_name: mariadb-slave1
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: gallery_db
      MASTER_HOST: mariadb-master
      REPLICATION_USER: replicator
      REPLICATION_PASSWORD: replicator123
    ports:
      - "3308:3306" # Puerto directo del slave1 (útil para depuración)
    depends_on:
      - mariadb-master # Asegura que el master esté arriba antes que el slave
    command: [ "mysqld", "--server-id=2", "--log-bin", "--relay-log=slave1-relay-bin", "--read-only=1", "--log-slave-updates=1", "--max_connections=1000" ]
    volumes:
      # El script slave-init.sh debería configurar la replicación después de que el contenedor inicie
      - ./slave-init.sh:/docker-entrypoint-initdb.d/slave-init.sh
      - mariadb-slave1-data:/var/lib/mysql
    networks:
      - gallery-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  mariadb-slave2:
    image: mariadb:10.6
    container_name: mariadb-slave2
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: gallery_db
      MASTER_HOST: mariadb-master
      REPLICATION_USER: replicator
      REPLICATION_PASSWORD: replicator123
    ports:
      - "3309:3306" # Puerto directo del slave2 (útil para depuración)
    depends_on:
      - mariadb-master # Asegura que el master esté arriba antes que el slave
    command: [ "mysqld", "--server-id=3", "--log-bin", "--relay-log=slave2-relay-bin", "--read-only=1", "--log-slave-updates=1", "--max_connections=1000" ]
    volumes:
      # El script slave-init.sh debería configurar la replicación después de que el contenedor inicie
      - ./slave-init.sh:/docker-entrypoint-initdb.d/slave-init.sh
      - mariadb-slave2-data:/var/lib/mysql
    networks:
      - gallery-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  haproxy:
    image: haproxy:2.6
    container_name: haproxy
    ports:
      - "3310:3310" # Puerto para operaciones de ESCRITURA (apunta al master)
      - "3311:3311" # Puerto para operaciones de LECTURA (balancea a los slaves)
      - "8404:8404" # Puerto para estadísticas de HAProxy
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - mariadb-master
      - mariadb-slave1
      - mariadb-slave2
    networks:
      - gallery-network
    restart: unless-stopped

networks:
  gallery-network:
    external: true

volumes:
  mariadb-master-data:
  mariadb-slave1-data:
  mariadb-slave2-data:
